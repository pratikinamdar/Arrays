/* This code takes 2 sorted arrays as input and merges them in such a way that the first set of sorted elements are in first array
and the remaining are in the second array. This is done using O(1) space and worst case time complexity of O(lengthOfArray1*LengthofArray2) The input arrays must be sorted else the program will malfunction.*/ 

#include <iostream>
#include<vector>
#include<algorithm>

using namespace std;
class merg
{
    
 public:
      vector<int> v1;
   vector<int> v2;
void print(vector<int> &v1, vector<int> &v2, int l1, int l2)
{
    cout<<endl<<endl<<"********Output**********";
cout<<endl<<"Array1:"<<endl;
     for(int i=0;i<l1;i++)
     {
         cout<<v1[i]<<"\t";
     }
     
     cout<<endl<<"Array2:"<<endl;
     
     for(int i=0;i<l2;i++)
     {
         cout<<v2[i]<<"\t";
     }
}

void sort2ndArray(vector<int> &v2, int l2)
{
    int i=0;
    while(v2[i]>v2[i+1] && i<l2-1)
    {
        int temp = v2[i];
        v2[i] = v2[i+1];
        v2[i+1]=temp;
        i++;
    }
}

void merge(vector<int> &v1, vector<int> &v2)
{
    int l1 = v1.size();
    int l2 = v2.size();
    

    if(l1 == 0 )  { 
        v1.swap(v2); 
  
    print(v1,v2, v1.size(), v2.size()); 
    return; 
    }
    else if (l2 == 0) { print(v1,v2, v1.size(), v2.size()); return; }
    int j = 0;
    for(int i=0;i<l1;i++)
    {
         if(v1[i]<=v2[j])
         {
             continue;
         }
         
         else
         {
             int temp = v1[i];
             v1[i] = v2[j];
             v2[j] = temp;
             sort2ndArray(v2, v2.size());
             i--;
         }
    }
    
    print(v1,v2, v1.size(), v2.size()); 
    return;
    
}

};



int main()
{
   merg m1;
   int data;
 
   int l1=0, l2=0;
   cout<<"Enter length of first array\n";
   cin>>l1;
   cout<<"Enter "<<l1<<" elements\n";
   for(int i=0;i<l1;i++)
   {
       cin>>data;
       m1.v1.push_back(data);
       cout<<endl<<i+1<<"element(s) entered";
   }
   cout<<endl<<"Enter length of 2nd array\n";
   cin>>l2;
   cout<<"Enter "<<l2<<" elements\n";
   for(int i=0;i<l2;i++)
   {
      cin>>data;
       m1.v2.push_back(data);
       
       cout<<endl<<i+1<<" element(s) entered";
   }
   
   m1.merge(m1.v1, m1.v2);
   
    return 0;
}
